package com.banchi.googlemapsv2;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GooglePlayServicesUtil;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.MapFragment;
import com.google.android.gms.maps.GoogleMap.OnMyLocationChangeListener;

import android.app.Activity;
import android.app.Dialog;
import android.app.Fragment;
import android.location.Location;
import android.os.Bundle;
import android.text.format.Time;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

public class locate extends Activity  implements OnMyLocationChangeListener{
	Button next;
	GoogleMap map;
	private double longitude;
	private double latitude;
	
	private int status;
	private String time;
	private String date;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.locate);
		
		status = GooglePlayServicesUtil.isGooglePlayServicesAvailable(getBaseContext());
		
		next = (Button) findViewById(R.id.nextButton);
		
		
		next.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View arg0) {
				 //TODO Auto-generated method stub
				initialize();
			}
		});
	}
	
	
	public void initialize(){
		
		if( status != ConnectionResult.SUCCESS){
			int requestCode = 10;
			Dialog dialog = GooglePlayServicesUtil.getErrorDialog(status, this, requestCode);
			dialog.show();
		}else{
			
			map = ((MapFragment) getFragmentManager().findFragmentById(R.id.fragId)).getMap();
			map.setMyLocationEnabled(true);
			map.setOnMyLocationChangeListener(this);
			
		}
		
	}


	@Override
	public void onMyLocationChange(Location loc) {
		// TODO Auto-generated method stub
		longitude = loc.getLongitude();
		latitude = loc.getLatitude();
		Calendar c = Calendar.getInstance();
        System.out.println("Current time => "+c.getTime());

        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String formattedDate = df.format(c.getTime());
		
		String Text = "My current location is: " +
		        "Latitud = " + latitude +
		        "\nLongitud = " + longitude+
		        "\nTime = "+loc.getTime()+
		        "\nBearing = "+loc.getBearing()+
		        "\nAltitude = "+loc.getAltitude()+
		        "\nAccuracy = "+loc.getAccuracy()+
		        "\nDate = "+formattedDate;
		        

		        Toast.makeText( getApplicationContext(), Text, Toast.LENGTH_SHORT).show();
		
		
	}
	
	
	public class WeatherHttpClient {
		 
		    private static String BASE_URL = "http://api.openweathermap.org/data/2.5/weather?q=";
		    private static String IMG_URL = "http://openweathermap.org/img/w/";
		 
		     
		    public String getWeatherData(String location) {
		        HttpURLConnection con = null ;
		        InputStream is = null;
		 
		        try {
		            con = (HttpURLConnection) ( new URL(BASE_URL + location)).openConnection();
		            con.setRequestMethod("GET");
		            con.setDoInput(true);
		            con.setDoOutput(true);
		            con.connect();
		             
		            // Let's read the response
		            StringBuffer buffer = new StringBuffer();
		            is = con.getInputStream();
		            BufferedReader br = new BufferedReader(new InputStreamReader(is));
		            String line = null;
		            while (  (line = br.readLine()) != null )
		                buffer.append(line + "\r\n");
		             
		            is.close();
		            con.disconnect();
		            return buffer.toString();
		        }
		        catch(Throwable t) {
		            t.printStackTrace();
		        }
		        finally {
		            try { is.close(); } catch(Throwable t) {}
		            try { con.disconnect(); } catch(Throwable t) {}
		        }
		 
		        return null;
		                 
		    }
		     
		    public byte[] getImage(String code) {
		        HttpURLConnection con = null ;
		        InputStream is = null;
		        try {
		            con = (HttpURLConnection) ( new URL(IMG_URL + code)).openConnection();
		            con.setRequestMethod("GET");
		            con.setDoInput(true);
		            con.setDoOutput(true);
		            con.connect();
		             
		            // Let's read the response
		            is = con.getInputStream();
		            byte[] buffer = new byte[1024];
		            ByteArrayOutputStream baos = new ByteArrayOutputStream();
		             
		            while ( is.read(buffer) != -1)
		                baos.write(buffer);
		             
		            return baos.toByteArray();
		        }
		        catch(Throwable t) {
		            t.printStackTrace();
		        }
		        finally {
		            try { is.close(); } catch(Throwable t) {}
		            try { con.disconnect(); } catch(Throwable t) {}
		        }
		         
		        return null;
		         
		    }
		}

}
